t = popcol(insertcol(renamecol(t, :preparation => :cps), 2, :preparation, select(t, :preparation) .|> x -> typeof(x) != Missing ? (x == "TRUE" ? 1.0 : 0.0) : missing), :cps)
t = popcol(insertcol(renamecol(t, :preoxStart => :cps), 3, :preoxStart, select(t, :preoxStart) .|> x -> typeof(x) == Missing ? missing : float(x)), :cps)
t = popcol(insertcol(renamecol(t, :preoxEnd => :cps), 4, :preoxEnd, select(t, :preoxEnd) .|> x -> x != "" ? (split(x, ",") .|> y -> parse(Float64, y)) : missing), :cps)
t = popcol(insertcol(renamecol(t, :cricPresStart => :cps), 5, :cricPresStart, select(t, :cricPresStart) .|> x -> (typeof(x) != Missing && x != "") ? (split(x, ",") .|> y -> parse(Float64, y)) : missing), :cps)
t = popcol(insertcol(renamecol(t, :cricPresEnd => :cps), 6, :cricPresEnd, select(t, :cricPresEnd) .|> x -> (typeof(x) != Missing && x != "") ? (split(x, ",") .|> y -> parse(Float64, y)) : missing), :cps)
t = popcol(insertcol(renamecol(t, :maskVentStart => :cps), 7, :maskVentStart, select(t, :maskVentStart) .|> x -> (typeof(x) != Missing && x != "") ? (split(x, ",") .|> y -> parse(Float64, y)) : missing), :cps)
t = popcol(insertcol(renamecol(t, :maskVentEnd => :cps), 8, :maskVentEnd, select(t, :maskVentEnd) .|> x -> (typeof(x) != Missing && x != "") ? (split(x, ",") .|> y -> parse(Float64, y)) : missing), :cps)
t = popcol(insertcol(renamecol(t, :etiStart => :cps), 9, :etiStart, select(t, :etiStart) .|> x -> (typeof(x) != Missing && x != "") ? (split(x, ",") .|> y -> parse(Float64, y)) : missing), :cps)
t = popcol(insertcol(renamecol(t, :etiEnd => :cps), 10, :etiEnd, select(t, :etiEnd) .|> x -> (typeof(x) != Missing && x != "") ? (split(x, ",") .|> y -> parse(Float64, y)) : missing), :cps)
t = popcol(insertcol(renamecol(t, :auscultation => :cps), 11, :auscultation, select(t, :auscultation) .|> x -> (typeof(x) != Missing && x != "") ? (split(x, ",") .|> y -> parse(Float64, y)) : missing), :cps)
t = popcol(insertcol(renamecol(t, :endTidalCheck => :cps), 12, :endTidalCheck, select(t, :endTidalCheck) .|> x -> typeof(x) != Missing ? (x == "TRUE" ? 1.0 : 0.0) : missing), :cps)
t = popcol(insertcol(renamecol(t, :fentanyl => :cps), 13, :fentanyl, select(t, :fentanyl) .|> x -> (typeof(x) != Missing && x != "") ? (split(x, ",") .|> y -> parse(Float64, y)) : missing), :cps)
t = popcol(insertcol(renamecol(t, :lidocaine => :cps), 14, :lidocaine, select(t, :lidocaine) .|> x -> (typeof(x) != Missing && x != "") ? (split(x, ",") .|> y -> parse(Float64, y)) : missing), :cps)
t = popcol(insertcol(renamecol(t, :rocuronium => :cps), 15, :rocuronium, select(t, :rocuronium) .|> x -> (typeof(x) != Missing && x != "") ? (split(x, ",") .|> y -> parse(Float64, y)) : missing), :cps)
t = popcol(insertcol(renamecol(t, :propofol => :cps), 16, :propofol, select(t, :propofol) .|> x -> (typeof(x) != Missing && x != "") ? (split(x, ",") .|> y -> parse(Float64, y)) : missing), :cps)
t = popcol(insertcol(renamecol(t, :succhinylcholine => :cps), 17, :succhinylcholine, select(t, :succhinylcholine) .|> x -> (typeof(x) != Missing && x != "") ? (split(x, ",") .|> y -> parse(Float64, y)) : missing), :cps)